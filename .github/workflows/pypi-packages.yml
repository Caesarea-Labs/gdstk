name: Build and publish packages

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, macos-latest]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_SKIP: "cp36-* cp37-* pp* *_ppc64le *_s390x *-macosx_universal2"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_windows:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    name: Build wheels for Windows (${{ matrix.python-version }})
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install build dependencies
        run: |
          pip install pip-tools ninja conan
          python -m piptools compile --resolver=backtracking -o requirements.txt pyproject.toml
          pip install -r requirements.txt
          conan install zlib/1.2.13@ -s compiler.version=16 -g cmake_paths
      - name: Build Python ${{ matrix.python-version }} wheel
        run: |
          python setup.py bdist_wheel
        env:
          CMAKE_GENERATOR: "Ninja"
          CMAKE_TOOLCHAIN_FILE: "conan_paths.cmake"
      - uses: actions/upload-artifact@v3
        with:
          path: "dist/*.whl"

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload wheel to PyPI
    needs: [build_sdist, build_wheels, build_windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
