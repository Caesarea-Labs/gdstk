name: Build & publish PyPI packages

on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_manylinux_wheels:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 12
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip wheel oldest-supported-numpy
          python -m pip install ninja
          python -m pip install conan==1.58.0
          conan install zlib/1.2.13@ -s compiler.version=16 -g cmake_paths
      - name: Build Python ${{ matrix.python-version }} wheel
        run: |
          python setup.py bdist_wheel
        env:
          CMAKE_GENERATOR: "Ninja"
          CMAKE_TOOLCHAIN_FILE: "conan_paths.cmake"
      - uses: actions/upload-artifact@v3
        with:
          path: "dist/*.whl"

  build_wheels_m1:
    name: Build wheels on macos-11
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist, build_wheels_windows, build_wheels_m1]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
